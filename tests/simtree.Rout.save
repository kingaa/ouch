
R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(ouch)
> 
> oubranch <- function (x0, t0, t1, alpha, sigma, theta, nstep = 10) {
+   x <- x0
+   t <- t0
+   sigma <- t(chol(sigma))
+   dt <- (t1-t0)/nstep
+   for (k in 1:nstep) {
+     x <- x+alpha%*%(theta-x)*dt+sigma%*%rnorm(n=ncol(sigma),sd=sqrt(dt))
+   }
+   x
+ }
> 
> ex <- function(x) {
+   y <- t(chol(x))
+   y[lower.tri(y,diag=TRUE)]
+ }
> 
> ox <- function(x) {
+   y <- matrix(0,nchar,nchar)
+   y[lower.tri(y,diag=TRUE)] <- x
+   y%*%t(y)
+ }
> 
> nnodes <- 501
> nchar <- 2
> 
> a <- c(0.1,0.01,0.2)
> alpha <- ox(a)
> s <- c(0.1,0,0.1)
> sigma <- ox(s)
> 
> theta <- list(
+               ns=c(0,0),
+               big=c(5,3),
+               small=c(-2,-1)
+               )
> 
> set.seed(2954189)
> 
> x <- matrix(nrow=nnodes,ncol=5,
+   dimnames=list(NULL,c("node","ancestor","time","A","B")))
> x[,1] <- 1:nnodes
> node <- 1
> time <- 0
> x[1,'time'] <- time
> while (node < nnodes) {
+   x[node+1,'node'] <- node+1
+   x[node+1,'time'] <- time+1
+   x[node+1,'ancestor'] <- node
+   x[node+2,'node'] <- node+2
+   x[node+2,'time'] <- time+1
+   x[node+2,'ancestor'] <- node
+   node <- node+2
+   time <- time+1
+ }
> x <- as.data.frame(x)
> 
> x$reg <- as.factor(sample('ns',size=nnodes,replace=TRUE))
> 
> x$A <- NA
> x$B <- NA
> x[1,c("A","B")] <- 0
> for (node in 2:nnodes) {
+   anc <- x[node,'ancestor']
+   t0 <- x[anc,'time']
+   t1 <- x[node,'time']
+   r <- x[node,'reg']
+   x[node,c("A","B")] <- oubranch(as.numeric(x[anc,c("A","B")]),t0,t1,alpha,sigma,theta[[r]])
+ }
> 
> tic <- Sys.time()
> tree <- with(x,ouchtree(node,ancestor,time))
> toc <- Sys.time()
> print(toc-tic)
Time difference of 1.324358 secs
> 
> bfit <- brown(data=x[c("A","B")],tree)
> print(summary(bfit))
$call
brown(data = x[c("A", "B")], tree = tree)

$sigma.squared
              [,1]          [,2]
[1,]  0.0083545396 -0.0005297714
[2,] -0.0005297714  0.0100517161

$theta
$theta$A
[1] -0.0426114

$theta$B
[1] 0.02719583


$loglik
[1] 226.1245

$deviance
[1] -452.2491

$aic
[1] -442.2491

$aic.c
[1] -442.1281

$sic
[1] -421.1561

$dof
[1] 5

> 
> tic <- Sys.time()
> hfit <- hansen(data=x[c("A","B")],tree=tree,regimes=x['reg'],sqrt.alpha=a,sigma=s,fit=F)
> toc <- Sys.time()
> print(toc-tic)
Time difference of 0.1399906 secs
> print(summary(hfit))
$call
hansen(data = x[c("A", "B")], tree = tree, regimes = x["reg"], 
    sqrt.alpha = a, sigma = s, fit = F)

$conv.code
NULL

$optimizer.message
NULL

$alpha
      [,1]   [,2]
[1,] 0.010 0.0010
[2,] 0.001 0.0401

$sigma.squared
     [,1] [,2]
[1,] 0.01 0.00
[2,] 0.00 0.01

$optima
$optima$A
         ns 
-0.06150747 

$optima$B
        ns 
-0.0677411 


$loglik
[1] 222.7395

$deviance
[1] -445.479

$aic
[1] -429.479

$aic.c
[1] -429.1869

$sic
[1] -395.7302

$dof
[1] 8

> 
> x$reg <- as.factor(sample(c('big','small'),size=nnodes,replace=TRUE))
> 
> x$A <- NA
> x$B <- NA
> x[1,c("A","B")] <- 0
> for (node in 2:nnodes) {
+   anc <- x[node,'ancestor']
+   t0 <- x[anc,'time']
+   t1 <- x[node,'time']
+   r <- x[node,'reg']
+   x[node,c("A","B")] <- oubranch(as.numeric(x[anc,c("A","B")]),t0,t1,alpha,sigma,theta[[r]])
+ }
> 
> tic <- Sys.time()
> tree <- with(x,ouchtree(node,ancestor,time))
> toc <- Sys.time()
> print(toc-tic)
Time difference of 1.304344 secs
> 
> bfit <- brown(data=x[c("A","B")],tree)
> print(summary(bfit))
$call
brown(data = x[c("A", "B")], tree = tree)

$sigma.squared
            [,1]        [,2]
[1,] 0.009988036 0.002198351
[2,] 0.002198351 0.012343692

$theta
$theta$A
[1] -0.02066064

$theta$B
[1] 0.2477921


$loglik
[1] 182.5327

$deviance
[1] -365.0655

$aic
[1] -355.0655

$aic.c
[1] -354.9445

$sic
[1] -333.9725

$dof
[1] 5

> 
> bfit <- update(bfit,data=x[c("B","A")])
> print(summary(bfit))
$call
brown(data = data, tree = object)

$sigma.squared
            [,1]        [,2]
[1,] 0.012343692 0.002198351
[2,] 0.002198351 0.009988036

$theta
$theta$B
[1] 0.2477921

$theta$A
[1] -0.02066064


$loglik
[1] 182.5327

$deviance
[1] -365.0655

$aic
[1] -355.0655

$aic.c
[1] -354.9445

$sic
[1] -333.9725

$dof
[1] 5

> 
> tic <- Sys.time()
> hfit <- hansen(data=x[c("A","B")],tree=tree,regimes=x['reg'],sqrt.alpha=a,sigma=s,fit=F)
> toc <- Sys.time()
> print(toc-tic)
Time difference of 0.1913183 secs
> print(summary(hfit))
$call
hansen(data = x[c("A", "B")], tree = tree, regimes = x["reg"], 
    sqrt.alpha = a, sigma = s, fit = F)

$conv.code
NULL

$optimizer.message
NULL

$alpha
      [,1]   [,2]
[1,] 0.010 0.0010
[2,] 0.001 0.0401

$sigma.squared
     [,1] [,2]
[1,] 0.01 0.00
[2,] 0.00 0.01

$optima
$optima$A
      big     small 
-2.718422  2.390460 

$optima$B
      big     small 
0.1872681 2.3082618 


$loglik
[1] 202.8818

$deviance
[1] -405.7637

$aic
[1] -385.7637

$aic.c
[1] -385.3156

$sic
[1] -343.5777

$dof
[1] 10

> 
