
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(ouch)
> set.seed(1277742405L)
> 
> tree <- with(bimac,ouchtree(node,ancestor,time/max(time),species))
> 
> h1 <- brown(log(bimac['size']),tree)
> h2 <- hansen(log(bimac['size']),tree,bimac['OU.1'],sqrt.alpha=1,sigma=1)
> h3 <- hansen(log(bimac['size']),tree,bimac['OU.3'],sqrt.alpha=1,sigma=1,method="Nelder-Mead")
> h3 <- update(h3,method="subplex",reltol=1e-11,parscale=c(0.1,0.1))
> h4 <- hansen(log(bimac['size']),tree,bimac['OU.4'],sqrt.alpha=1,sigma=1,method="L-BFGS-B")
> h5 <- hansen(log(bimac['size']),tree,bimac['OU.LP'],sqrt.alpha=1,sigma=1,reltol=1e-5)
> h5 <- update(h5,method='subplex',reltol=1e-11,parscale=c(0.1,0.1),hessian=TRUE)
> simdat <- simulate(h5,nsim=10)
> hsim <- update(h5,data=simdat[[1]])
> bsim <- update(h1,data=simdat[[1]])
> 
> h2 <- update(h2,method="subplex",reltol=0)
unsuccessful convergence, code 1, see documentation for 'subplex'
'subplex' message: limit of machine precision reached
Warning message:
in 'hansen': unsuccessful convergence. 
> h2 <- update(h2,method="subplex",maxit=2)
unsuccessful convergence, code -1, see documentation for 'subplex'
'subplex' message: number of function evaluations exceeds 'maxit'
Warning message:
in 'hansen': unsuccessful convergence. 
> 
> try(hansen(bimac))
Error in hansen(bimac) : argument "tree" is missing, with no default
> try(hansen(tree=bimac))
Error : in 'hansen': 'tree' must be an object of class 'ouchtree'.
> try(hansen(tree=tree))
Error : in 'hansen': 'data' must be specified.
> try(hansen(tree=tree,data=bimac$size[1:10]))
Error : in 'hansen': 'data' vector(s) must be numeric, with one entry per node of the tree.
> try(hansen(tree=tree,data=bimac$size))
Error : in 'hansen': 'data' vector names (or data-frame row names) must match node names of 'tree'.
> try(hansen(tree=tree,data=setNames(bimac$size,bimac$node)))
Error in hansen(tree = tree, data = setNames(bimac$size, bimac$node)) : 
  argument "sqrt.alpha" is missing, with no default
> try(hansen(tree=tree,data=setNames(bimac$size,bimac$node),sqrt.alpha=1))
Error in hansen(tree = tree, data = setNames(bimac$size, bimac$node),  : 
  argument "sigma" is missing, with no default
> try(hansen(tree=tree,data=setNames(bimac$size,bimac$node),sqrt.alpha=1,sigma=1))
Error : in 'hansen': 'regimes' must be specified.
> try(hansen(tree=tree,data=setNames(bimac$size,bimac$node),sqrt.alpha=1,sigma=1,
+   regimes=1:5))
Error : in 'hansen': there must be one entry in 'regimes' per node of the tree.
> try(hansen(tree=tree,data=setNames(bimac$size,bimac$node),sqrt.alpha=1,sigma=1,
+   regimes=bimac$OU.LP))
Error : in 'hansen': each regime specification must have names corresponding to the node names.
> try(hansen(tree=tree,data="bob",sqrt.alpha=1,sigma=1,
+   regimes=setNames(bimac$OU.LP,bimac$node)))
Error : in 'hansen': 'data' must be either a single numeric data set or a list of numeric data sets.
> try(hansen(tree=tree,data=setNames(c(bimac$size[-c(44,45)],NA,NA),bimac$node),
+   sqrt.alpha=1,sigma=1,
+   regimes=setNames(bimac$OU.LP,bimac$node)))
Error : in 'missing data on terminal node(s): ': '44', '45'.
> try(
+   hansen(tree=tree,
+     data=list(
+       setNames(bimac$size,bimac$node),
+       setNames(runif(n=45),bimac$node)
+     ),
+     sqrt.alpha=1,sigma=1,
+     regimes=setNames(bimac$OU.LP,bimac$node)
+   )
+ )
Error : in 'hansen': the length of 'sqrt.alpha' must be a triangular number.
> try(
+   hansen(tree=tree,
+     data=list(
+       setNames(bimac$size,bimac$node),
+       setNames(runif(n=45),bimac$node)
+     ),
+     sqrt.alpha=c(1,1,1),sigma=1,
+     regimes=setNames(bimac$OU.LP,bimac$node)
+   )
+ )
Error : in 'hansen': the length of 'sigma' must be a triangular number.
> try(
+   hansen(tree=tree,
+     data=list(
+       setNames(bimac$size,bimac$node),
+       setNames(rnorm(n=45),bimac$node)
+     ),
+     sqrt.alpha=c(1,1,1),sigma=c(1,1,1),
+     regimes=setNames(bimac$OU.LP[1:10],bimac$node[1:10])
+   )
+ )
Error : in 'hansen': there must be one entry in 'regimes' per node of the tree.
> try(
+   hansen(tree=tree,
+     data=list(
+       setNames(bimac$size,bimac$node),
+       setNames(rnorm(n=45),bimac$node)
+     ),
+     sqrt.alpha=c(1,1,1),sigma=c(1,1,1),
+     regimes=list(
+       setNames(bimac$OU.LP[1:10],bimac$node[1:10]),
+       setNames(bimac$OU.1,bimac$node)
+     )
+   )
+ )
Error : in 'hansen': each element in 'regimes' must be a vector with one entry per node of the tree.
> try(
+   hansen(tree=tree,
+     data=list(
+       setNames(bimac$size,bimac$node),
+       setNames(rnorm(n=45),bimac$node)
+     ),
+     sqrt.alpha=c(1,1,1),sigma=c(1,1,1),
+     regimes=list(
+       as.character(setNames(bimac$OU.LP,bimac$node)),
+       setNames(bimac$OU.1,bimac$node)
+     )
+   )
+ )
Error : in 'hansen': 'regimes' must be of class 'factor' or a list of 'factor' objects.
> try(
+   hansen(tree=tree,
+     data=list(
+       setNames(bimac$size,bimac$node),
+       setNames(rnorm(n=45),bimac$node)
+     ),
+     sqrt.alpha=c(1,1,1),sigma=c(1,1,1),
+     regimes=list(
+       setNames(bimac$OU.LP,bimac$node),
+       setNames(bimac$OU.1,bimac$node),
+       setNames(bimac$OU.3,bimac$node)
+     )
+    )
+ )
Error : in 'hansen': you must supply a regime-specification vector for each character.
> hansen(tree=tree,
+   data=list(
+     setNames(bimac$size,bimac$node),
+     setNames(rnorm(n=45),bimac$node)
+   ),
+   sqrt.alpha=c(1,1,1),sigma=c(1,1,1),
+   regimes=setNames(bimac$OU.LP,bimac$node)
+ ) -> h
unsuccessful convergence, code 1, see documentation for 'optim'
Warning message:
in 'hansen': unsuccessful convergence. 
> hansen(tree=tree,
+   data=list(
+     A=setNames(bimac$size,bimac$node),
+     B=setNames(rnorm(n=45),bimac$node)
+   ),
+   sqrt.alpha=c(1,1,1),sigma=c(1,1,1),
+   regimes=setNames(bimac$OU.LP,bimac$node)
+ ) -> h
unsuccessful convergence, code 1, see documentation for 'optim'
Warning message:
in 'hansen': unsuccessful convergence. 
> 
> names(as.data.frame(h))
[1] "nodes"                               "ancestors"                          
[3] "times"                               "labels"                             
[5] "setNames.bimac.OU.LP..bimac.node."   "setNames.bimac.OU.LP..bimac.node..1"
[7] "A"                                   "B"                                  
> 
